# 대리자
- 함수를 보관할 수 있는 타입
- 사용자 정의 대리자를 만들 수도 있지만 System.Action 혹은 System.Func 혹은 UnityAction을 사용한다.
- Invoke() 메소드로 보관된 모든 함수를 호출할 수 있다.

# 이벤트
- 옵저버 패턴을 쉽게 사용하기 위한 타입
- 선언된 대리자 타입의 함수를 보관할 수 있다.
- 대리자와 다르게 외부에서 Invoke()를 할 수 없다.
- 함수가 중복되어 추가 된다면 디버깅이 매우 어렵기 때문에 꼭 추가 전에는 삭제를 해준다.
- 이벤트 객체에 아무런 함수도 없는 경우엔는 null이기 떄문에 Invoke()를 호출할 떄는 꼭 null 체크를 해준다.
    > Ex. OnTakenDamage?.Inkove();
- 활용 방법은 'Event'의 의미대로 특정 사건(혹은 시점)을 나타내며, 그 시점에 일어나야 하는 일들(코드 상에서는 메소드로 표현)을 일어나게 할 수 있다.
- 주의 사항은 (1) 특정 시점이 됐는데 Invoke() 호출을 빼먹는 경우, (2) Invoke() 될 떄 실행되어야 할 메소드를 추가하지 않은 경우이다. 